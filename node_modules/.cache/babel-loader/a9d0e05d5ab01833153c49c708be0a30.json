{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar utils = {\n  tronWeb: false,\n  contract: false,\n  setTronWeb: function setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n  },\n  setContract: function setContract(tronWeb, contractAddress) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return tronWeb.contract().at(contractAddress);\n\n            case 2:\n              _this.contract = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};\nexport default utils;","map":{"version":3,"sources":["/Users/miguelmerchan/Documents/GitHub/6-Leidy2/src/utils/index.js"],"names":["utils","tronWeb","contract","setTronWeb","setContract","contractAddress","at"],"mappings":";;AAAA,IAAMA,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE,KADG;AAEZC,EAAAA,QAAQ,EAAE,KAFE;AAIZC,EAAAA,UAJY,sBAIDF,OAJC,EAIQ;AAClB,SAAKA,OAAL,GAAeA,OAAf;AACD,GANW;AAQNG,EAAAA,WARM,uBAQMH,OARN,EAQeI,eARf,EAQgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACpBJ,OAAO,CAACC,QAAR,GAAmBI,EAAnB,CAAsBD,eAAtB,CADoB;;AAAA;AAC1C,cAAA,KAAI,CAACH,QADqC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3C;AAVW,CAAd;AAaA,eAAeF,KAAf","sourcesContent":["const utils = {\n  tronWeb: false,\n  contract: false,\n\n  setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n  },\n\n  async setContract(tronWeb, contractAddress) {\n    this.contract = await tronWeb.contract().at(contractAddress);\n  }\n};\n\nexport default utils;\n"]},"metadata":{},"sourceType":"module"}