{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/src/components/App/index.js\";\nimport React, { Component } from \"react\";\nimport TronWeb from \"tronweb\";\nimport Utils from \"../../utils\";\nimport Home from \"../V1Home\";\nimport TronLinkGuide from \"../TronLinkGuide\";\nimport contractAddress from \"../Contract\";\nimport cons from \"../../cons\";\nvar FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      admin: false,\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var isAdmin;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return new Promise(function (resolve) {\n                  var tronWebState = {\n                    installed: !!window.tronWeb,\n                    loggedIn: window.tronWeb && window.tronWeb.ready\n                  };\n\n                  if (tronWebState.installed) {\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    return resolve();\n                  }\n\n                  var tries = 0;\n                  var timer = setInterval(function () {\n                    if (tries >= 10) {\n                      var TRONGRID_API = \"https://api.trongrid.io\";\n                      window.tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n                      _this2.setState({\n                        tronWeb: {\n                          installed: false,\n                          loggedIn: false\n                        }\n                      });\n\n                      clearInterval(timer);\n                      return resolve();\n                    }\n\n                    tronWebState.installed = !!window.tronWeb;\n                    tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                    if (!tronWebState.installed) {\n                      return tries++;\n                    }\n\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    resolve();\n                  }, 1 * 1000);\n                });\n\n              case 2:\n                if (!this.state.tronWeb.loggedIn) {\n                  // Set default address (foundation address) used for contract calls\n                  // Directly overwrites the address object if TronLink disabled the\n                  // function call\n                  window.tronWeb.defaultAddress = {\n                    hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                    base58: FOUNDATION_ADDRESS\n                  };\n                  window.tronWeb.on(\"addressChange\", function () {\n                    if (_this2.state.tronWeb.loggedIn) {\n                      return;\n                    }\n\n                    _this2.setState({\n                      tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                      }\n                    });\n                  });\n                }\n\n                Utils.setTronWeb(window.tronWeb);\n                _context.next = 6;\n                return Utils.setContract(window.tronWeb, contractAddress);\n\n              case 6:\n                _context.next = 8;\n                return Utils.contract.admin(window.tronWeb.defaultAddress.base58).call();\n\n              case 8:\n                isAdmin = _context.sent;\n                this.setState({\n                  admin: isAdmin\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getString = \"\";\n      var loc = document.location.href; //console.log(loc);\n\n      if (loc.indexOf('?') > 0) {\n        getString = loc.split('?')[1];\n        getString = getString.split('#')[0];\n      }\n\n      if (!this.state.tronWeb.installed) return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TronLinkGuide, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      })));\n      if (!this.state.tronWeb.loggedIn) return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TronLinkGuide, {\n        installed: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      })));\n\n      switch (getString) {\n        case \"v1\":\n        case \"V1\":\n          return /*#__PURE__*/React.createElement(Home, {\n            admin: this.state.admin,\n            contractAddress: cons.SC2,\n            version: \"1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 16\n            }\n          });\n\n        case \"v2\":\n        case \"V2\":\n          return /*#__PURE__*/React.createElement(Home, {\n            admin: this.state.admin,\n            contractAddress: cons.SC2,\n            version: \"1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 16\n            }\n          });\n\n        case \"shasta\":\n        case \"test\":\n        case \"v0\":\n        case \"V0\":\n          return /*#__PURE__*/React.createElement(Home, {\n            admin: this.state.admin,\n            contractAddress: cons.SCtest,\n            version: \"999\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 16\n            }\n          });\n\n        default:\n          return /*#__PURE__*/React.createElement(Home, {\n            admin: this.state.admin,\n            contractAddress: cons.SC2,\n            version: \"1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 16\n            }\n          });\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // {tWeb()}","map":{"version":3,"sources":["/Users/miguelmerchan/Documents/GitHub/6-Leidy2/src/components/App/index.js"],"names":["React","Component","TronWeb","Utils","Home","TronLinkGuide","contractAddress","cons","FOUNDATION_ADDRESS","App","props","state","admin","tronWeb","installed","loggedIn","Promise","resolve","tronWebState","window","ready","setState","tries","timer","setInterval","TRONGRID_API","clearInterval","defaultAddress","hex","address","toHex","base58","on","setTronWeb","setContract","contract","call","isAdmin","getString","loc","document","location","href","indexOf","split","SC2","SCtest"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TronWeb from \"tronweb\";\n\nimport Utils from \"../../utils\";\nimport Home from \"../V1Home\";\nimport TronLinkGuide from \"../TronLinkGuide\";\nimport contractAddress from \"../Contract\";\n\nimport cons from \"../../cons\"\n\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      admin: false,\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n\n          const TRONGRID_API = \"https://api.trongrid.io\";\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            }\n          });\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) {\n          return tries++;\n        }\n\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        resolve();\n      }, 1*1000);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object if TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS\n      };\n\n      window.tronWeb.on(\"addressChange\", () => {\n        if (this.state.tronWeb.loggedIn) {\n          return;\n        }\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true\n          }\n        });\n      });\n    }\n\n    Utils.setTronWeb(window.tronWeb);\n    await Utils.setContract(window.tronWeb, contractAddress);\n\n    var isAdmin = await Utils.contract.admin(window.tronWeb.defaultAddress.base58).call();\n\n    this.setState({\n      admin: isAdmin\n    });\n     \n    \n  }\n\n\n  render() {\n\n    var getString = \"\";\n    var loc = document.location.href;\n    //console.log(loc);\n    if(loc.indexOf('?')>0){\n              \n      getString = loc.split('?')[1];\n      getString = getString.split('#')[0];\n\n    }\n\n    if (!this.state.tronWeb.installed) return (\n      <>\n        <div className=\"container\">\n          <TronLinkGuide />\n        </div>\n      </>\n      );\n\n    if (!this.state.tronWeb.loggedIn) return (\n      <>\n        <div className=\"container\">\n          <TronLinkGuide installed />\n        </div>\n      </>\n      );\n\n    switch (getString) {\n      case \"v1\": \n      case \"V1\": \n        return(<Home admin={this.state.admin} contractAddress={cons.SC2} version=\"1\"/>);\n      case \"v2\":\n      case \"V2\": \n        return(<Home admin={this.state.admin} contractAddress={cons.SC2} version=\"1\"/>);\n      case \"shasta\":\n      case \"test\":\n      case \"v0\":\n      case \"V0\": \n        return(<Home admin={this.state.admin} contractAddress={cons.SCtest} version=\"999\"/>);\n      default:\n        return(<Home admin={this.state.admin} contractAddress={cons.SC2} version=\"1\"/>);\n    }\n\n\n  }\n}\nexport default App;\n\n// {tWeb()}\n"]},"metadata":{},"sourceType":"module"}