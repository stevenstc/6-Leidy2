{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/miguelmerchan/Documents/GitHub/6-Leidy2/src/components/Depositos/index.js\";\nimport React, { Component } from \"react\";\nimport Utils from \"../../utils\";\n\nvar Depositos = /*#__PURE__*/function (_Component) {\n  _inherits(Depositos, _Component);\n\n  var _super = _createSuper(Depositos);\n\n  function Depositos(props) {\n    var _this;\n\n    _classCallCheck(this, Depositos);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      direccion: \"\",\n      link: \"Make an investment to get the referral LINK\",\n      registered: false,\n      balanceRef: 0,\n      totalRef: 0,\n      invested: 0,\n      paidAt: 0,\n      my: 0,\n      almacen: 0,\n      withdrawn: 0,\n      precioSITE: 1,\n      valueSITE: 0,\n      valueUSDT: 0,\n      personasIzquierda: 0,\n      puntosIzquierda: 0,\n      personasDerecha: 0,\n      puntosDerecha: 0,\n      bonusBinario: 0,\n      puntosEfectivosIzquierda: 0,\n      puntosEfectivosDerecha: 0,\n      puntosReclamadosIzquierda: 0,\n      puntosReclamadosDerecha: 0,\n      puntosLostIzquierda: 0,\n      puntosLostDerecha: 0,\n      directos: 0\n    };\n    _this.Investors = _this.Investors.bind(_assertThisInitialized(_this));\n    _this.Investors2 = _this.Investors2.bind(_assertThisInitialized(_this));\n    _this.Investors3 = _this.Investors3.bind(_assertThisInitialized(_this));\n    _this.Link = _this.Link.bind(_assertThisInitialized(_this));\n    _this.withdraw = _this.withdraw.bind(_assertThisInitialized(_this));\n    _this.rateSITE = _this.rateSITE.bind(_assertThisInitialized(_this));\n    _this.handleChangeSITE = _this.handleChangeSITE.bind(_assertThisInitialized(_this));\n    _this.handleChangeUSDT = _this.handleChangeUSDT.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Depositos, [{\n    key: \"handleChangeSITE\",\n    value: function handleChangeSITE(event) {\n      this.setState({\n        valueSITE: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeUSDT\",\n    value: function handleChangeUSDT(event) {\n      this.setState({\n        valueUSDT: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Utils.setContract(window.tronWeb, this.props.contractAddress);\n\n              case 2:\n                setInterval(function () {\n                  return _this2.Investors2();\n                }, 3 * 1000);\n                setInterval(function () {\n                  return _this2.Investors3();\n                }, 3 * 1000);\n                setInterval(function () {\n                  return _this2.Investors();\n                }, 3 * 1000);\n                setInterval(function () {\n                  return _this2.Link();\n                }, 3 * 1000);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"rateSITE\",\n    value: function () {\n      var _rateSITE = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", 1);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function rateSITE() {\n        return _rateSITE.apply(this, arguments);\n      }\n\n      return rateSITE;\n    }()\n  }, {\n    key: \"Link\",\n    value: function () {\n      var _Link = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var registered, loc, mydireccion, link, link2;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                registered = this.state.registered;\n\n                if (!registered) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                loc = document.location.href;\n\n                if (loc.indexOf('?') > 0) {\n                  loc = loc.split('?')[0];\n                }\n\n                if (loc.indexOf('#') > 0) {\n                  loc = loc.split('#')[0];\n                }\n\n                mydireccion = window.tronWeb.defaultAddress.base58;\n                _context3.next = 8;\n                return Utils.contract.addressToId(mydireccion).call();\n\n              case 8:\n                mydireccion = _context3.sent;\n                mydireccion = loc + '?ref=' + mydireccion;\n                link = mydireccion + \"&hand=izq\";\n                link2 = mydireccion + \"&hand=der\";\n                this.setState({\n                  link: link,\n                  link2: link2\n                });\n                _context3.next = 16;\n                break;\n\n              case 15:\n                this.setState({\n                  link: \"Make an investment to get the referral LINK\",\n                  link2: \"Make an investmentnto get the referral LINK\"\n                });\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function Link() {\n        return _Link.apply(this, arguments);\n      }\n\n      return Link;\n    }()\n  }, {\n    key: \"Investors\",\n    value: function () {\n      var _Investors = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var direccion, usuario, tronUSDT, direccioncontract, contractUSDT, decimales, verdepositos, listaDepositos, depositos, tiempo, porcent, i, porcentiempo, fecha, proceso;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                direccion = window.tronWeb.defaultAddress.base58;\n                _context4.next = 3;\n                return Utils.contract.investors(direccion).call();\n\n              case 3:\n                usuario = _context4.sent;\n                _context4.next = 6;\n                return Utils.contract.withdrawable(direccion).call();\n\n              case 6:\n                usuario.withdrawable = _context4.sent;\n                _context4.next = 9;\n                return window.tronWeb;\n\n              case 9:\n                tronUSDT = _context4.sent;\n                _context4.next = 12;\n                return Utils.contract.tokenPricipal().call();\n\n              case 12:\n                direccioncontract = _context4.sent;\n                _context4.next = 15;\n                return tronUSDT.contract().at(direccioncontract);\n\n              case 15:\n                contractUSDT = _context4.sent;\n                _context4.next = 18;\n                return contractUSDT.decimals().call();\n\n              case 18:\n                decimales = _context4.sent;\n                _context4.next = 21;\n                return Utils.contract.depositos(direccion).call();\n\n              case 21:\n                verdepositos = _context4.sent;\n                usuario.inicio = 1000;\n                usuario.amount = parseInt(usuario.amount._hex);\n                usuario.invested = parseInt(usuario.invested);\n                usuario.withdrawn = parseInt(usuario.withdrawn._hex);\n                usuario.directos = parseInt(usuario.directos);\n                usuario.balanceRef = parseInt(usuario.balanceRef);\n                usuario.almacen = parseInt(usuario.almacen);\n                usuario.totalRef = parseInt(usuario.totalRef._hex);\n                usuario.paidAt = parseInt(usuario.paidAt._hex);\n                usuario.withdrawable = parseInt(usuario.withdrawable._hex);\n                listaDepositos = /*#__PURE__*/React.createElement(\"div\", {\n                  className: \"box\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 7\n                  }\n                }, /*#__PURE__*/React.createElement(\"h3\", {\n                  className: \"title\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 9\n                  }\n                }, \"There is not yet deposits.\"));\n\n                if (!(verdepositos[0].length > 0)) {\n                  _context4.next = 55;\n                  break;\n                }\n\n                _context4.next = 36;\n                return Utils.contract.depositos(direccion).call();\n\n              case 36:\n                depositos = _context4.sent;\n                depositos.amount = depositos[0];\n                delete depositos[0];\n                depositos.tiempo = depositos[1];\n                delete depositos[1];\n                depositos.pasivo = depositos[2];\n                delete depositos[2];\n                depositos.activo = depositos[3];\n                delete depositos[3]; //console.log(depositos);\n\n                listaDepositos = [];\n                _context4.next = 48;\n                return Utils.contract.tiempo().call();\n\n              case 48:\n                tiempo = _context4.sent;\n                tiempo = parseInt(tiempo._hex) * 1000;\n                _context4.next = 52;\n                return Utils.contract.porcent().call();\n\n              case 52:\n                porcent = _context4.sent;\n                porcent = parseInt(porcent._hex) / 100;\n\n                for (i = 0; i < depositos.amount.length; i++) {\n                  //depositos.tiempo[i] = parseInt(depositos.tiempo[i]._hex);\n                  porcentiempo = (Date.now() - parseInt(depositos.tiempo[i]._hex) * 1000) * 100 / tiempo;\n                  fecha = new Date(parseInt(depositos.tiempo[i]._hex) * 1000 + tiempo);\n                  fecha = \"\" + fecha;\n\n                  if (depositos.activo[i] && parseInt(depositos.amount[i]._hex) / Math.pow(10, 6) * (porcentiempo / 100) < parseInt(depositos.amount[i]._hex) / Math.pow(10, 6)) {\n                    if (depositos.pasivo[i]) {\n                      proceso = /*#__PURE__*/React.createElement(\"b\", {\n                        __self: this,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 184,\n                          columnNumber: 23\n                        }\n                      }, \"Plan Binary (ACTIVE)\");\n                    } else {\n                      proceso = /*#__PURE__*/React.createElement(\"b\", {\n                        __self: this,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 186,\n                          columnNumber: 23\n                        }\n                      }, \"Plan FREE Binary (ACTIVE)\");\n                    }\n                  } else {\n                    if (depositos.pasivo[i]) {\n                      proceso = /*#__PURE__*/React.createElement(\"b\", {\n                        __self: this,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 190,\n                          columnNumber: 23\n                        }\n                      }, \"Plan Binario (FINALIZED)\");\n                    } else {\n                      proceso = /*#__PURE__*/React.createElement(\"b\", {\n                        __self: this,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 192,\n                          columnNumber: 23\n                        }\n                      }, \"Plan FREE Binario (FINALIZED)\");\n                    }\n                  }\n\n                  listaDepositos[i] = /*#__PURE__*/React.createElement(\"div\", {\n                    className: \"box\",\n                    key: \"depsits-\" + i,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 11\n                    }\n                  }, /*#__PURE__*/React.createElement(\"h3\", {\n                    className: \"title\",\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 11\n                    }\n                  }, parseInt(depositos.amount[i]._hex) / Math.pow(10, 6) / porcent, \" USDT\"), \"Estimate time \", /*#__PURE__*/React.createElement(\"b\", {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 27\n                    }\n                  }, fecha), /*#__PURE__*/React.createElement(\"div\", {\n                    className: \"progress\",\n                    style: {\n                      \"height\": \"20px\"\n                    },\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 11\n                    }\n                  }, /*#__PURE__*/React.createElement(\"div\", {\n                    className: \"progress-bar-striped progress-bar-animated bg-success\",\n                    role: \"progressbar\",\n                    style: {\n                      \"width\": porcentiempo + \"%\"\n                    },\n                    \"aria-valuenow\": this.state.porcentiempo,\n                    \"aria-valuemin\": \"0\",\n                    \"aria-valuemax\": \"100\",\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 13\n                    }\n                  })), /*#__PURE__*/React.createElement(\"br\", {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 11\n                    }\n                  }), proceso);\n                }\n\n              case 55:\n                //console.log(usuario);\n                this.setState({\n                  direccion: window.tronWeb.address.fromHex(direccion.address),\n                  registered: usuario.registered,\n                  balanceRef: usuario.balanceRef / Math.pow(10, decimales),\n                  totalRef: usuario.totalRef / Math.pow(10, decimales),\n                  invested: usuario.invested / Math.pow(10, decimales),\n                  paidAt: usuario.paidAt / Math.pow(10, decimales),\n                  my: usuario.withdrawable / Math.pow(10, decimales),\n                  withdrawn: usuario.withdrawn / Math.pow(10, decimales),\n                  almacen: usuario.almacen / Math.pow(10, decimales),\n                  porcentiempo: porcentiempo,\n                  directos: usuario.directos,\n                  depositos: listaDepositos\n                });\n\n              case 56:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function Investors() {\n        return _Investors.apply(this, arguments);\n      }\n\n      return Investors;\n    }()\n  }, {\n    key: \"Investors2\",\n    value: function () {\n      var _Investors2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function Investors2() {\n        return _Investors2.apply(this, arguments);\n      }\n\n      return Investors2;\n    }()\n  }, {\n    key: \"Investors3\",\n    value: function () {\n      var _Investors3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var _this$state, balanceRef, my, almacen, directos, valorPlan, direccion, puntos, bonusBinario, available, brazoIzquierdo, brazoDerecho;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _this$state = this.state, balanceRef = _this$state.balanceRef, my = _this$state.my, almacen = _this$state.almacen, directos = _this$state.directos, valorPlan = _this$state.valorPlan;\n                direccion = window.tronWeb.defaultAddress.base58; //Personas y puntos totales\n\n                _context6.next = 4;\n                return Utils.contract.personasBinary(direccion).call();\n\n              case 4:\n                puntos = _context6.sent;\n                _context6.next = 7;\n                return Utils.contract.withdrawableBinary(direccion).call();\n\n              case 7:\n                bonusBinario = _context6.sent;\n                available = balanceRef + my + almacen;\n\n                if (directos >= 2 && available < valorPlan) {\n                  bonusBinario.amount = parseInt(bonusBinario.amount._hex) / Math.pow(10, 6);\n                } else {\n                  bonusBinario.amount = 0;\n                }\n\n                _context6.next = 12;\n                return Utils.contract.handLeft(direccion).call();\n\n              case 12:\n                brazoIzquierdo = _context6.sent;\n                _context6.next = 15;\n                return Utils.contract.handRigth(direccion).call();\n\n              case 15:\n                brazoDerecho = _context6.sent;\n                //console.log(brazoDerecho);\n                this.setState({\n                  personasIzquierda: parseInt(puntos.pLeft._hex),\n                  personasDerecha: parseInt(puntos.pRigth._hex),\n                  puntosIzquierda: parseInt(puntos.left._hex) / Math.pow(10, 6),\n                  puntosDerecha: parseInt(puntos.rigth._hex) / Math.pow(10, 6),\n                  bonusBinario: bonusBinario.amount,\n                  puntosEfectivosIzquierda: parseInt(bonusBinario.left._hex) / Math.pow(10, 6),\n                  puntosEfectivosDerecha: parseInt(bonusBinario.rigth._hex) / Math.pow(10, 6),\n                  puntosReclamadosIzquierda: parseInt(brazoIzquierdo.reclamados._hex) / Math.pow(10, 6),\n                  puntosReclamadosDerecha: parseInt(brazoDerecho.reclamados._hex) / Math.pow(10, 6)\n                });\n\n              case 17:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function Investors3() {\n        return _Investors3.apply(this, arguments);\n      }\n\n      return Investors3;\n    }()\n  }, {\n    key: \"withdraw\",\n    value: function () {\n      var _withdraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var _this$state2, balanceRef, my, almacen, directos, valorPlan, bonusBinario, available, direccioncontract, contractUSDT, decimales, MIN_RETIRO;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _this$state2 = this.state, balanceRef = _this$state2.balanceRef, my = _this$state2.my, almacen = _this$state2.almacen, directos = _this$state2.directos, valorPlan = _this$state2.valorPlan, bonusBinario = _this$state2.bonusBinario;\n                available = balanceRef + my + almacen;\n\n                if (directos >= 2 && available < valorPlan) {\n                  available += bonusBinario;\n                }\n\n                available = available.toFixed(8);\n                available = parseFloat(available);\n                _context7.next = 7;\n                return Utils.contract.tokenPricipal().call();\n\n              case 7:\n                direccioncontract = _context7.sent;\n                _context7.next = 10;\n                return window.tronWeb.contract().at(direccioncontract);\n\n              case 10:\n                contractUSDT = _context7.sent;\n                _context7.next = 13;\n                return contractUSDT.decimals().call();\n\n              case 13:\n                decimales = _context7.sent;\n                _context7.next = 16;\n                return Utils.contract.MIN_RETIRO().call();\n\n              case 16:\n                MIN_RETIRO = _context7.sent;\n                MIN_RETIRO = parseInt(MIN_RETIRO._hex) / Math.pow(10, decimales);\n\n                if (!(available > MIN_RETIRO)) {\n                  _context7.next = 25;\n                  break;\n                }\n\n                _context7.next = 21;\n                return Utils.contract.withdrawToDeposit().send();\n\n              case 21:\n                _context7.next = 23;\n                return Utils.contract.withdraw().send();\n\n              case 23:\n                _context7.next = 26;\n                break;\n\n              case 25:\n                if (available < MIN_RETIRO) {\n                  window.alert(\"The minimum to withdraw are: \" + MIN_RETIRO + \" USDT\");\n                }\n\n              case 26:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function withdraw() {\n        return _withdraw.apply(this, arguments);\n      }\n\n      return withdraw;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        style: {\n          'textAlign': 'center'\n        },\n        className: \"section-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-university mr-2\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          'fontWeight': 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }\n      }, \"Deposits:\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12 col-lg-10 offset-lg-1 wow bounceInUp\",\n        \"data-wow-duration\": \"1s\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }\n      }, this.state.depositos))));\n    }\n  }]);\n\n  return Depositos;\n}(Component);\n\nexport { Depositos as default };","map":{"version":3,"sources":["/Users/miguelmerchan/Documents/GitHub/6-Leidy2/src/components/Depositos/index.js"],"names":["React","Component","Utils","Depositos","props","state","direccion","link","registered","balanceRef","totalRef","invested","paidAt","my","almacen","withdrawn","precioSITE","valueSITE","valueUSDT","personasIzquierda","puntosIzquierda","personasDerecha","puntosDerecha","bonusBinario","puntosEfectivosIzquierda","puntosEfectivosDerecha","puntosReclamadosIzquierda","puntosReclamadosDerecha","puntosLostIzquierda","puntosLostDerecha","directos","Investors","bind","Investors2","Investors3","Link","withdraw","rateSITE","handleChangeSITE","handleChangeUSDT","event","setState","target","value","setContract","window","tronWeb","contractAddress","setInterval","loc","document","location","href","indexOf","split","mydireccion","defaultAddress","base58","contract","addressToId","call","link2","investors","usuario","withdrawable","tronUSDT","tokenPricipal","direccioncontract","at","contractUSDT","decimals","decimales","depositos","verdepositos","inicio","amount","parseInt","_hex","listaDepositos","length","tiempo","pasivo","activo","porcent","i","porcentiempo","Date","now","fecha","proceso","address","fromHex","valorPlan","personasBinary","puntos","withdrawableBinary","available","handLeft","brazoIzquierdo","handRigth","brazoDerecho","pLeft","pRigth","left","rigth","reclamados","toFixed","parseFloat","MIN_RETIRO","withdrawToDeposit","send","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Utils from \"../../utils\";\n\nexport default class Depositos extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      direccion: \"\",\n      link: \"Make an investment to get the referral LINK\",\n      registered: false,\n      balanceRef: 0,\n      totalRef: 0,\n      invested: 0,\n      paidAt: 0,\n      my: 0,\n      almacen: 0,\n      withdrawn: 0,\n      precioSITE: 1,\n      valueSITE: 0,\n      valueUSDT: 0,\n      personasIzquierda: 0,\n      puntosIzquierda: 0,\n      personasDerecha: 0,\n      puntosDerecha: 0,\n      bonusBinario: 0,\n      puntosEfectivosIzquierda: 0,\n      puntosEfectivosDerecha: 0,\n      puntosReclamadosIzquierda: 0,\n      puntosReclamadosDerecha: 0,\n      puntosLostIzquierda: 0,\n      puntosLostDerecha: 0,\n      directos: 0,\n\n    };\n\n    this.Investors = this.Investors.bind(this);\n    this.Investors2 = this.Investors2.bind(this);\n    this.Investors3 = this.Investors3.bind(this);\n    this.Link = this.Link.bind(this);\n    this.withdraw = this.withdraw.bind(this);\n\n    this.rateSITE = this.rateSITE.bind(this);\n    this.handleChangeSITE = this.handleChangeSITE.bind(this);\n    this.handleChangeUSDT = this.handleChangeUSDT.bind(this);\n  }\n\n  handleChangeSITE(event) {\n    this.setState({valueSITE: event.target.value});\n  }\n\n  handleChangeUSDT(event) {\n    this.setState({valueUSDT: event.target.value});\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, this.props.contractAddress);\n    setInterval(() => this.Investors2(),3*1000);\n    setInterval(() => this.Investors3(),3*1000);\n    setInterval(() => this.Investors(),3*1000);\n    setInterval(() => this.Link(),3*1000);\n  };\n\n  async rateSITE(){\n    /*var proxyUrl = cons.proxy;\n    var apiUrl = cons.PRE;\n    var response;\n\n    try {\n      response = await fetch(proxyUrl+apiUrl);\n    } catch (err) {\n      console.log(err);\n      return this.state.precioSITE;\n    }\n\n    var json = await response.json();\n\n    this.setState({\n      precioSITE: json.Data.precio\n    });\n\n    return json.Data.precio;*/\n\n    return 1;\n\n  };\n\n  async Link() {\n    const {registered} = this.state;\n    if(registered){\n\n      let loc = document.location.href;\n      if(loc.indexOf('?')>0){\n        loc = loc.split('?')[0];\n      }\n\n      if(loc.indexOf('#')>0){\n        loc = loc.split('#')[0];\n      }\n      let mydireccion = window.tronWeb.defaultAddress.base58;\n      mydireccion = await Utils.contract.addressToId(mydireccion).call();\n      mydireccion = loc+'?ref='+mydireccion;\n      var link = mydireccion+\"&hand=izq\";\n      var link2 = mydireccion+\"&hand=der\";\n      this.setState({\n        link: link,\n        link2: link2,\n      });\n    }else{\n      this.setState({\n        link: \"Make an investment to get the referral LINK\",\n        link2: \"Make an investmentnto get the referral LINK\",\n      });\n    }\n  }\n\n\n  async Investors() {\n\n    let direccion = window.tronWeb.defaultAddress.base58;\n    let usuario = await Utils.contract.investors(direccion).call();\n    usuario.withdrawable = await Utils.contract.withdrawable(direccion).call();\n    \n    var tronUSDT = await window.tronWeb;\n    var direccioncontract = await Utils.contract.tokenPricipal().call();\n    var contractUSDT = await tronUSDT.contract().at(direccioncontract); \n    var decimales = await contractUSDT.decimals().call();\n\n    var verdepositos = await Utils.contract.depositos(direccion).call();\n\n    usuario.inicio = 1000;\n    usuario.amount = parseInt(usuario.amount._hex);\n    usuario.invested = parseInt(usuario.invested);\n    usuario.withdrawn = parseInt(usuario.withdrawn._hex);\n    usuario.directos = parseInt(usuario.directos);\n    usuario.balanceRef = parseInt(usuario.balanceRef);\n    usuario.almacen = parseInt(usuario.almacen);\n    usuario.totalRef = parseInt(usuario.totalRef._hex);\n    usuario.paidAt = parseInt(usuario.paidAt._hex);\n    usuario.withdrawable = parseInt(usuario.withdrawable._hex);\n\n    var listaDepositos = (\n      <div className=\"box\">\n        <h3 className=\"title\">There is not yet deposits.</h3>\n\n      </div>\n    );\n\n    if (verdepositos[0].length > 0) {\n      var depositos = await Utils.contract.depositos(direccion).call();\n      depositos.amount =  depositos[0];\n      delete depositos[0];\n      depositos.tiempo =  depositos[1];\n      delete depositos[1];\n      depositos.pasivo =  depositos[2];\n      delete depositos[2];\n      depositos.activo =  depositos[3];\n      delete depositos[3];\n\n      //console.log(depositos);\n\n      listaDepositos = [];\n\n      var tiempo = await Utils.contract.tiempo().call();\n      tiempo = parseInt(tiempo._hex)*1000;\n\n      let porcent = await Utils.contract.porcent().call();\n        porcent = parseInt(porcent._hex)/100;\n\n      for (let i = 0; i < depositos.amount.length; i++) {\n\n      \n        //depositos.tiempo[i] = parseInt(depositos.tiempo[i]._hex);\n\n        var porcentiempo = (((Date.now()-(parseInt(depositos.tiempo[i]._hex)*1000)))*100)/tiempo;\n\n\n        var fecha = new Date((parseInt(depositos.tiempo[i]._hex)*1000)+tiempo);\n        fecha = \"\"+fecha;\n\n        var proceso;\n        if (depositos.activo[i]  && ((parseInt(depositos.amount[i]._hex)/10**6)*(porcentiempo/100)) < (parseInt(depositos.amount[i]._hex)/10**6)) {\n          if (depositos.pasivo[i]  ) {\n            proceso = <b>Plan Binary (ACTIVE)</b> \n          } else {\n            proceso = <b>Plan FREE Binary (ACTIVE)</b> \n          }\n        }else{\n          if (depositos.pasivo[i]  ) {\n            proceso = <b>Plan Binario (FINALIZED)</b> \n          }else{\n            proceso = <b>Plan FREE Binario (FINALIZED)</b> \n          }\n        }\n        \n\n        listaDepositos[i] = (\n          <div className=\"box\" key={\"depsits-\"+i}>\n          <h3 className=\"title\">{(parseInt(depositos.amount[i]._hex)/10**6)/porcent} USDT</h3>\n            Estimate time <b>{fecha}</b>\n          <div className=\"progress\" style={{\"height\": \"20px\"}}>\n            <div className=\"progress-bar-striped progress-bar-animated bg-success\" role=\"progressbar\" style={{\"width\": porcentiempo+\"%\"}} aria-valuenow={this.state.porcentiempo} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n          </div>\n          <br></br>\n          {proceso}\n    \n    \n        </div>\n        );\n        \n      }\n    }\n\n    //console.log(usuario);\n\n    \n\n    this.setState({\n      direccion: window.tronWeb.address.fromHex(direccion.address),\n      registered: usuario.registered,\n      balanceRef: usuario.balanceRef/10**decimales,\n      totalRef: usuario.totalRef/10**decimales,\n      invested: usuario.invested/10**decimales,\n      paidAt: usuario.paidAt/10**decimales,\n      my: usuario.withdrawable/10**decimales,\n      withdrawn: usuario.withdrawn/10**decimales,\n      almacen: usuario.almacen/10**decimales,\n      porcentiempo: porcentiempo,\n      directos: usuario.directos,\n      depositos: listaDepositos\n    });\n\n  };\n\n  async Investors2() {\n\n    //var precioSITE = await this.rateSITE();\n\n    /*this.setState({\n      precioSITE: precioSITE\n    });*/\n\n  };\n\n  async Investors3() {\n\n    var {balanceRef, my, almacen, directos, valorPlan } = this.state;\n\n    let direccion = window.tronWeb.defaultAddress.base58;\n\n    //Personas y puntos totales\n    let puntos = await Utils.contract.personasBinary(direccion).call();\n\n    // monto de bonus y puntos efectivos\n    let bonusBinario = await Utils.contract.withdrawableBinary(direccion).call();\n  \n    var available = (balanceRef+my+almacen);\n\n    if(directos >= 2 && available < valorPlan ){\n      bonusBinario.amount = parseInt(bonusBinario.amount._hex)/10**6;\n    }else{\n      bonusBinario.amount = 0;\n    }\n\n    let brazoIzquierdo = await Utils.contract.handLeft(direccion).call();\n\n    let brazoDerecho = await Utils.contract.handRigth(direccion).call();\n\n    //console.log(brazoDerecho);\n\n    this.setState({\n      personasIzquierda: parseInt(puntos.pLeft._hex),\n      personasDerecha: parseInt(puntos.pRigth._hex),\n\n      puntosIzquierda: parseInt(puntos.left._hex)/10**6,\n      puntosDerecha: parseInt(puntos.rigth._hex)/10**6,\n\n      bonusBinario: bonusBinario.amount,\n\n      puntosEfectivosIzquierda: parseInt(bonusBinario.left._hex)/10**6,\n      puntosEfectivosDerecha: parseInt(bonusBinario.rigth._hex)/10**6,\n\n      puntosReclamadosIzquierda: parseInt(brazoIzquierdo.reclamados._hex)/10**6,\n      puntosReclamadosDerecha: parseInt(brazoDerecho.reclamados._hex)/10**6\n\n    });\n\n  };\n\n  async withdraw(){\n    const { balanceRef, my, almacen, directos, valorPlan, bonusBinario } = this.state;\n\n    var available = (balanceRef+my+almacen);\n    if(directos >= 2 && available < valorPlan){\n      available += bonusBinario;\n    }\n    available = available.toFixed(8);\n    available = parseFloat(available);\n\n    var direccioncontract = await Utils.contract.tokenPricipal().call();\n    var contractUSDT = await window.tronWeb.contract().at(direccioncontract);\n\n    var decimales = await contractUSDT.decimals().call();\n\n    var MIN_RETIRO = await Utils.contract.MIN_RETIRO().call();\n    MIN_RETIRO = parseInt(MIN_RETIRO._hex)/10**decimales;\n\n    if ( available > MIN_RETIRO ){\n      await Utils.contract.withdrawToDeposit().send();\n      await Utils.contract.withdraw().send();\n    }else{\n      if (available < MIN_RETIRO) {\n        window.alert(\"The minimum to withdraw are: \"+(MIN_RETIRO)+\" USDT\");\n      }\n    }\n  };\n\n\n  render() {   \n\n    return (\n\n      <div className=\"container\">\n\n        <header style={{'textAlign': 'center'}} className=\"section-header\">\n          <h3 className=\"white\">\n            <i className=\"fa fa-university mr-2\" aria-hidden=\"true\"></i>\n            <span style={{'fontWeight': 'bold'}}>\n              Deposits:\n            </span>\n          </h3>\n          <div className=\"row text-center\">\n            <div className=\"col-md-12 col-lg-10 offset-lg-1 wow bounceInUp\" data-wow-duration=\"1s\">\n              {this.state.depositos}\n              \n            </div>\n          </div>\n\n\n        </header>\n\n\n      </div>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}